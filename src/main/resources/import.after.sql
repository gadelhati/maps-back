INSERT INTO maps.datum (created_at, updated_at, id, code, name, ae, umf) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_datum, t2.datum, t2.ae, t2.um_f FROM sisbndo.tb_datum AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.platform_category (created_at, updated_at, id, code, name) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_tipo_plataforma, TRIM(t2.nome_tipo_plataforma) FROM sisbndo.tb_tipo_plataforma AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.media_category (created_at, updated_at, id, code, name) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_tipo_midia, TRIM(t2.nome_tipo_midia) FROM sisbndo.tb_tipo_midia AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.station_category (created_at, updated_at, id, code, alias, name) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_tipo_estacao, TRIM(t2.nome_estacao), TRIM(t2.descricao_estacao) FROM sisbndo.tb_tipo_estacao AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.module (name, id, created_at, updated_at) SELECT DISTINCT(LOWER(TRIM(t2.modulo_utilizacao))) AS lower, gen_random_uuid(), NOW(), NOW() FROM sisbndo.tb_tipo_equipamento AS t2 GROUP BY lower ON CONFLICT DO NOTHING;
INSERT INTO maps.module (name, id, created_at, updated_at) SELECT DISTINCT(LOWER(TRIM(t2.cod_area_resp))) AS lower, gen_random_uuid(), NOW(), NOW() FROM sisbndo.tb_pesquisador_comissao AS t2 GROUP BY lower ON CONFLICT DO NOTHING;
INSERT INTO maps.equipment_category (created_at, updated_at, id, code, acronym, name, module, description) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_tipo_equipamento, TRIM(t2.acronimo), TRIM(t2.nome), (SELECT t3.id FROM maps.module AS t3 WHERE t3.name = t2.modulo_utilizacao), t2.descricao from sisbndo.tb_tipo_equipamento AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.equipment_method (name, id, created_at, updated_at) SELECT DISTINCT(LOWER(TRIM(t2.metodo_amostragem))) AS lower, gen_random_uuid(), NOW(), NOW() FROM sisbndo.tb_equipamento AS t2 GROUP BY lower ON CONFLICT DO NOTHING;

INSERT INTO maps.manufacturer (name, id, created_at, updated_at) SELECT DISTINCT(LOWER(TRIM(t2.fabricante))) AS lower, gen_random_uuid(), NOW(), NOW() FROM sisbndo.tb_equipamento AS t2 GROUP BY lower ON CONFLICT DO NOTHING;
-- adicionados null e vazio em manufacturer
INSERT INTO maps.manufacturer (created_at, updated_at, id, name) SELECT NOW(), NOW(), gen_random_uuid(), CASE WHEN (LOWER(TRIM(t2.fabricante)) = 'teldyne rdi' or LOWER(TRIM(t2.fabricante)) = 'teeldyne rdi instruments') THEN 'teledyne' WHEN (LOWER(TRIM(t2.fabricante)) = 'valport') THEN 'valeport' WHEN (LOWER(TRIM(t2.fabricante)) = 'vaissala') THEN 'vaisala' WHEN (LOWER(TRIM(t2.fabricante)) = 'sofar' or LOWER(TRIM(t2.fabricante)) = 'sofar ocean technologies') THEN 'sofar ocean' WHEN (LOWER(TRIM(t2.fabricante)) = 'sea-bird' or LOWER(TRIM(t2.fabricante)) = 'seabird' or LOWER(TRIM(t2.fabricante)) = 'sbe' or LOWER(TRIM(t2.fabricante)) = 'sbe/wetlabs') THEN 'sea-bird scientific' WHEN (LOWER(TRIM(t2.fabricante)) = 'sea and sun technology') THEN 'sea & sun technology' WHEN (LOWER(TRIM(t2.fabricante)) = 'niel brown' or LOWER(TRIM(t2.fabricante)) = 'neil brown') THEN 'neil brown ocean sensors' WHEN (LOWER(TRIM(t2.fabricante)) = 'jfe advantech') THEN 'jfe' WHEN (LOWER(TRIM(t2.fabricante)) = 'axys' or LOWER(TRIM(t2.fabricante)) = 'axys technologis inc.' or LOWER(TRIM(t2.fabricante)) = 'axys technologies inc.' or LOWER(TRIM(t2.fabricante)) = 'axys technologies inc') THEN 'axys technologies' WHEN (LOWER(TRIM(t2.fabricante)) = '') THEN null ELSE LOWER(TRIM(t2.fabricante)) END FROM sisbndo.tb_equipamento AS t2 ON CONFLICT DO NOTHING;

INSERT INTO maps.equipment (created_at, updated_at, id, code, equipment_category, equipment_method, number, model, manufacturer, frequency, range, calibration) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_equipamento, (SELECT t3.id FROM maps.equipment_category AS t3 WHERE t3.code = t2.cod_tipo_equipamento), (SELECT t3.id FROM maps.equipment_method AS t3 WHERE t3.name = t2.metodo_amostragem), t2.num_serie, t2.modelo, (SELECT t3.id FROM maps.manufacturer AS t3 WHERE t3.name = t2.fabricante), t2.frequencia, t2.alcance, t2.ultima_calibracao FROM sisbndo.tb_equipamento AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.project (created_at, updated_at, id, code, name, description) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_projeto, TRIM(t2.nome_projeto), TRIM(t2.descricao_projeto) FROM sisbndo.tb_projeto AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.hydrographic_survey (created_at, updated_at, id, code, name) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_levantamento, TRIM(t2.nome_levantamento) FROM sisbndo.tb_levantamento AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.country (created_at, updated_at, id, code, name) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_pais, TRIM(t2.nome_pais) FROM sisbndo.tb_pais AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.institution (created_at, updated_at, id, code, country, name, mb) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_instituicao, (SELECT t3.id FROM maps.country AS t3 WHERE t3.code = t2.cod_pais), TRIM(t2.nome_instituicao), (t2.mb = 'S') FROM sisbndo.tb_instituicao AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.harbor (created_at, updated_at, id, code, name, latitude, longitude, chart_number, reference) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_porto, TRIM(t2.nome), t2.latitude, t2.longitude, t2.num_carta, t2.num_ref FROM sisbndo.tb_portos AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.harbor (created_at, updated_at, id, name) SELECT NOW(), NOW(), gen_random_uuid(), TRIM(t2.porto_partida) FROM sisbndo.tb_comissao AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.harbor (created_at, updated_at, id, name) SELECT NOW(), NOW(), gen_random_uuid(), TRIM(t2.porto_chegada) FROM sisbndo.tb_comissao AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.platform (created_at, updated_at, id, code, country, platform_category, telegraph_call_sign, international_call_sign, name, visual_call_sign) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_plataforma, (SELECT t3.id FROM maps.country AS t3 WHERE t3.code = t2.cod_pais), (SELECT t3.id FROM maps.platform_category AS t3 WHERE t3.code = t2.cod_tipo_plataforma), TRIM(t2.indicativo_telegrafico), TRIM(t2.indicativo_internacional), CASE LOWER(TRIM(t2.nome_plataforma)) WHEN 'sem nome' THEN null ELSE LOWER(TRIM(t2.nome_plataforma)) END, TRIM(t2.indicativo_visual) FROM sisbndo.tb_plataforma AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.researcher (created_at, updated_at, id, code, name, email, address) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_pesquisador, TRIM(t2.nome_pesquisador), TRIM(t2.endereco_eletronico), TRIM(t2.endereco_pesquisador) FROM sisbndo.tb_pesquisador AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.media (created_at, updated_at, id, code, institution, media_category, identification, receipt, shipping, obs) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_midia, (SELECT t3.id FROM maps.institution AS t3 WHERE t3.code = t2.cod_instituicao), (SELECT t3.id FROM maps.media_category AS t3 WHERE t3.code = t2.cod_tipo_midia), TRIM(t2.identificacao), t2.data_recebimento, t2.data_remessa, t2.obs FROM sisbndo.tb_midia AS t2 ON CONFLICT DO NOTHING;
-- sisbndo.tb_plataforma_comissao, PARECE INCONSISTENTE
INSERT INTO maps.commission (created_at, updated_at, id, code, project, hydrographic_survey, coordinator, responsible, cruise_name, cruise_number, name, description, start, finish, latitude_bottom_most, latitude_top_most, longitude_left_most, longitude_right_most, harbor_departure, harbor_arrived, area_name, maximum_depth_area, minimum_depth_area, maximum_collection_depth, minimum_collection_depth, total_size_media, qualificacao_dados, h_folder, obs) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_comissao, (SELECT t3.id FROM maps.project AS t3 WHERE t3.code = t2.cod_projeto), (SELECT t3.id FROM maps.hydrographic_survey AS t3 WHERE t3.code = t2.cod_levantamento), (SELECT t3.id FROM maps.institution AS t3 WHERE t3.code = t2.cod_instituicao_coordenadora), (SELECT t3.id FROM maps.institution AS t3 WHERE t3.code = t2.cod_instituicao_responsavel), TRIM(t2.nome_cruzeiro), TRIM(t2.num_cruzeiro), TRIM(t2.nome_comissao), TRIM(t2.descricao_comissao), t2.data_inicio, t2.data_fim, t2.lat_bottommost, t2.lat_topmost, t2.long_leftmost, t2.long_rightmost, (SELECT t3.id FROM maps.harbor AS t3 WHERE t3.name = t2.porto_partida), (SELECT t3.id FROM maps.harbor AS t3 WHERE t3.name = t2.porto_chegada), TRIM(t2.nome_area_comissao), t2.profundidade_maxima_area, t2.profundidade_minima_area, t2.profundidade_maxima_coleta, t2.profundidade_minima_coleta, t2.tamanho_total_midia, TRIM(T2.qualificacao_dados), TRIM(t2.pasta_h), (CASE WHEN (t2.obs = 'Nome comissÃ£o retirado do ALPHA' or obs = 'Nome da comissão obtido no ALPHA' or obs = 'Nome da comissao retirado do ALPHA' or obs = 'Nome comissão retirado do ALPHA') THEN 'Nome da comissão obtido no ALPHA' ELSE TRIM(t2.obs) END) FROM sisbndo.tb_comissao AS t2 ON CONFLICT DO NOTHING;
-- UPDATE sisbndo.tb_pesquisador_comissao SET cod_area_resp = 'OCEANOGRAFIA' WHERE cod_area_resp = 'OCENOGRAFIA';
INSERT INTO maps.research (created_at, updated_at, id, researcher, commission, module, start, finish) SELECT NOW(), NOW(), gen_random_uuid(), (SELECT t3.id FROM maps.researcher AS t3 WHERE t3.code = t2.cod_pesquisador), (SELECT t3.id FROM maps.commission AS t3 WHERE t3.code = t2.cod_comissao), (SELECT t3.id FROM maps.module AS t3 WHERE LOWER(t3.name) = LOWER(t2.cod_area_resp)), t2.data_inicio_resp, t2.data_fim_resp FROM sisbndo.tb_pesquisador_comissao AS t2 ON CONFLICT DO NOTHING;
-- sisbndo.tb_midia_equipamento_comissao, PARECE INCONSISTENTE
INSERT INTO maps.upper_air (created_at, updated_at, id, cod_estacao, alt, dbc, pressao, dd, fff, ido, temp, ur, hora, ascensao, orvalho, ctrlqc_pressao, ctrlqc_vento, ctrlqc_temp, ctrlqc_orvalho, ctrlqc_ur, ctrlqc_alt, ctrlqc_dd, ctrlqc_fff) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_estacao, t2.alt, TRIM(t2.dbc)::INTEGER, t2.pressao, t2.dd, t2.fff, t2.ido::INTEGER, t2.temp, t2.ur, CASE WHEN SUBSTRING(t2.hora, 4, 1)::INTEGER > 5 THEN CONCAT(SUBSTRING(t2.hora, 1, 1), SUBSTRING(t2.hora, 2, 1)::INTEGER + (SUBSTRING(t2.hora, 4,1)::INTEGER - 5), ':', (SUBSTRING(t2.hora, 4,1)::INTEGER - 5), SUBSTRING(t2.hora, 5, 4))::time ELSE t2.hora::time END hora_corrigida, t2.ascensao, t2.orvalho, t2.ctrlqc_pressao::INTEGER, t2.ctrlqc_vento::INTEGER, t2.ctrlqc_temp::INTEGER, t2.ctrlqc_orvalho::INTEGER, t2.ctrlqc_ur::INTEGER, t2.ctrlqc_alt::INTEGER, t2.ctrlqc_dd::INTEGER, t2.ctrlqc_fff::INTEGER FROM sisbndo.tb_ar_superior AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.eet (created_at, updated_at, id, code, station_category, commission, platform, equipment, media, start, finish, latitude_bottom_most, latitude_top_most, longitude_right_most, longitude_left_most, fb, plataforma_batimetrica, secrecy_code, obs, equipment_depth, local_depth, datum, name_seismic_line, start_seismic_line_data, end_seismic_line_data) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_estacao_espaco_tempo, (SELECT t3.id FROM maps.station_category AS t3 WHERE t3.code = t2.cod_tipo_estacao), (SELECT t3.id FROM maps.commission AS t3 WHERE t3.code = t2.cod_comissao), (SELECT t3.id FROM maps.platform AS t3 WHERE t3.code = t2.cod_plataforma), (SELECT t3.id FROM maps.equipment AS t3 WHERE t3.code = t2.cod_equipamento), (SELECT t3.id FROM maps.media AS t3 WHERE t3.code = t2.cod_midia), t2.data_hora_inicio, t2.data_hora_fim, t2.lat_bottommost, t2.lat_topmost, t2.long_rightmost, t2.long_leftmost, t2.fb, t2.plataforma_batimetrica, t2.cod_sigilo, t2.obs, t2.prof_eqpto, t2.prof_local, (SELECT t3.id FROM maps.datum AS t3 WHERE t3.code = t2.cod_datum), t2.nome_linha_sism, t2.data_ini_linha_sism, t2.data_fim_linha_sism  FROM sisbndo.tb_estacao_espaco_tempo AS t2 ON CONFLICT DO NOTHING;
-- t2.nome_linha_sism, t2.data_ini_linha_sism, t2.data_fim_linha_sism ????
INSERT INTO maps.seismic (created_at, updated_at, id, eet, point, latitude, longitude, quality_control_position) SELECT NOW(), NOW(), gen_random_uuid(), (SELECT t3.id FROM maps.eet AS t3 WHERE t3.code = t2.cod_estacao_espaco_tempo), t2.id_pto, t2.latitude, t2.longitude, (t2.ctrlqc_posicao::INTEGER) FROM sisbndo.tb_sismica AS t2 ON CONFLICT DO NOTHING;
INSERT INTO maps.bathymetry (created_at, updated_at, id, eet, latitude, longitude, depth, datum, quality_control_position, quality_control_depth) SELECT NOW(), NOW(), gen_random_uuid(), (SELECT t3.id FROM maps.eet AS t3 WHERE t3.code = t2.cod_estacao_espaco_tempo), t2.latitude, t2.longitude, t2.profundidade, (SELECT t3.id FROM maps.datum AS t3 WHERE t3.code = t2.cod_datum), (t2.ctrlqc_posicao::INTEGER), (t2.ctrlqc_prof::INTEGER) FROM sisbndo.tb_batimetria AS t2 ON CONFLICT DO NOTHING;
UPDATE maps.bathymetry SET point =  CONCAT('POINT(', CASE WHEN SUBSTRING(longitude::VARCHAR, 1, 1) = '-' AND LENGTH(REPLACE(longitude::VARCHAR, '-', '')) > 2 THEN CONCAT('-', SUBSTRING(REPLACE(longitude::VARCHAR, '-', ''), 1, 2), '.', SUBSTRING(REPLACE(longitude::VARCHAR, '-', ''), 3))::NUMERIC WHEN SUBSTRING(longitude::VARCHAR, 1, 1) != '-' AND LENGTH(REPLACE(longitude::VARCHAR, '-', '')) > 2 THEN CONCAT(SUBSTRING(longitude::VARCHAR, 1, 2), '.', SUBSTRING(longitude::VARCHAR, 3))::NUMERIC ELSE longitude::NUMERIC END, ' ', CASE WHEN SUBSTRING(latitude::VARCHAR, 1, 1) = '-' AND LENGTH(REPLACE(latitude::VARCHAR, '-', '')) > 2 AND SUBSTRING(latitude::VARCHAR, 1, 3)::NUMERIC > -90 THEN CONCAT('-', SUBSTRING(REPLACE(latitude::VARCHAR, '-', ''), 1, 2), '.', SUBSTRING(REPLACE(latitude::VARCHAR, '-', ''), 3))::NUMERIC WHEN SUBSTRING(latitude::VARCHAR, 1, 1) != '-' AND LENGTH(REPLACE(latitude::VARCHAR, '-', '')) > 2 AND SUBSTRING(latitude::VARCHAR, 1, 2)::NUMERIC < 90 THEN CONCAT(SUBSTRING(latitude::VARCHAR, 1, 2), '.', SUBSTRING(latitude::VARCHAR, 3))::NUMERIC WHEN SUBSTRING(latitude::VARCHAR, 1, 1) = '-' AND LENGTH(REPLACE(latitude::VARCHAR, '-', '')) >= 2 AND SUBSTRING(latitude::VARCHAR, 1, 3)::NUMERIC <= -90 THEN CONCAT('-', SUBSTRING(REPLACE(latitude::VARCHAR, '-', ''), 1, 1), '.', SUBSTRING(REPLACE(latitude::VARCHAR, '-', ''), 2))::NUMERIC WHEN SUBSTRING(latitude::VARCHAR, 1, 1) != '-' AND LENGTH(REPLACE(latitude::VARCHAR, '-', '')) >= 2 AND SUBSTRING(latitude::VARCHAR, 1, 2)::NUMERIC >= 90 THEN CONCAT(SUBSTRING(latitude::VARCHAR, 1, 1), '.', SUBSTRING(latitude::VARCHAR, 2))::NUMERIC ELSE latitude::NUMERIC END, ')')::GEOGRAPHY
INSERT INTO maps.station (created_at, updated_at, id, code, platform, equipment, commission, station_category, media, number, name, date_time, latitude, longitude, quad_marsden, sub_quad_marsden_1, quad_wmo, sub_sub_quad_marsden, prof_coleta_geo, obs, cod_sigilo, datum, ctrlqc_posicao, ctrlqc_data_hora) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_estacao, (SELECT t3.id FROM maps.platform AS t3 WHERE t3.code = t2.cod_plataforma), (SELECT t3.id FROM maps.equipment AS t3 WHERE t3.code = t2.cod_equipamento), (SELECT t3.id FROM maps.commission AS t3 WHERE t3.code = t2.cod_comissao), (SELECT t3.id FROM maps.station_category AS t3 WHERE t3.code = t2.cod_tipo_estacao), (SELECT t3.id FROM maps.media AS t3 WHERE t3.code = t2.cod_midia), TRIM(t2.num_estacao), t2.nome_estacao, t2.data_hora, t2.latitude, t2.longitude, t2.quad_marsden, t2.sub_quad_marsden_1, t2.quad_wmo, t2.sub_sub_quad_marsden, t2.prof_coleta_geo, t2.obs, TRIM(t2.cod_sigilo), (SELECT t3.id FROM maps.datum AS t3 WHERE t3.code = t2.cod_datum), CASE TRIM(t2.ctrlqc_posicao) WHEN '' THEN null ELSE TRIM(t2.ctrlqc_posicao)::INTEGER END, CASE TRIM(t2.ctrlqc_data_hora) WHEN '' THEN TRIM(t2.ctrlqc_data_hora)::INTEGER END FROM sisbndo.tb_estacao AS t2 ON CONFLICT DO NOTHING;
-- UM REGISTRO DISCREPANTE
UPDATE sisbndo.tb_amostra_geologica SET tenca_amostra = null WHERE cod_amostr_geolog = '1229';
INSERT INTO maps.geologic (created_at, updated_at, id, code, station, country, drag_speed, drag_direction, drag_duration, photo, photo_depth, side_scan, sample_category, sample_size, sample_weight, sample_color, sample_texture, concretions, shell, plant, animal, pollution, tense_main, tense_complementary, tense_sample, obs_preliminary, obs, survey, structure, num_sec_amostra, length_mark, color_bottom, color_top, numnac, quality_control_geologic, grade_selection, grade_rounding) SELECT NOW(), NOW(), gen_random_uuid(), t2.cod_amostr_geolog, (SELECT t3.id FROM maps.station AS t3 WHERE t3.code = t2.cod_estacao), (SELECT t3.id FROM maps.country AS t3 WHERE t3.code = TRIM(t2.area_origem)::INTEGER), t2.arrasto_velocidade, TRIM(t2.arrasto_direcao)::INTEGER, TRIM(t2.arrasto_duracao)::INTEGER, CASE t2.foto_amostra WHEN 'S' THEN true ELSE false END, CASE t2.foto_fundo WHEN 'S' THEN true ELSE false END, t2.side_scan, t2.tipo_amostra, t2.volume_amostra, t2.peso_amostra, TRIM(t2.cor_amostra)::INTEGER, TRIM(t2.textura_amostra)::INTEGER, CASE t2.concrecoes WHEN 'S' THEN true ELSE false END, CASE t2.conchas WHEN 'S' THEN true ELSE false END, CASE t2.plantas WHEN 'S' THEN true ELSE false END, CASE t2.animais WHEN 'S' THEN true ELSE false END, t2.poluicao, TRIM(t2.tenca_principal)::INTEGER, TRIM(t2.tenca_complementar)::INTEGER, TRIM(t2.tenca_amostra)::INTEGER, t2.obs_analise_preliminar, t2.obs_identificacao, TRIM(t2.sondagem)::INTEGER, TRIM(t2.estrutura)::INTEGER, TRIM(t2.num_sec_amostra), t2.comprimento_testemunho, TRIM(t2.cor_fundo)::INTEGER, TRIM(t2.cor_topo)::INTEGER, t2.numnac, TRIM(t2.ctrlqc_geo)::INTEGER, TRIM(t2.grau_selecao)::INTEGER, TRIM(t2.grau_arredondamento)::INTEGER FROM sisbndo.tb_amostra_geologica AS t2 ON CONFLICT DO NOTHING;

-- meteorologia
-- meteorologia_espaco_tempo
-- gebco_raw
-- dados_complem_gebco
-- dados_complem_oc_et
-- dados_complem_ocean
-- coleta_perfil_espaco_tempo
-- coleta_perfil
-- analise sedimentologica